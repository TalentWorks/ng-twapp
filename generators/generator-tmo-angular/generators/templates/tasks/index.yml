---
tasks:
    core:
        desc: Common options for all phases
        run: false

    build:
        desc: Build project
        run:
            - analyze
            - test
            - assemble
            - optimize

    # TODO: Validate project has required dependencies
    validate:
        desc: Validate project has required dependencies
        run: false

    analyze:
        desc: Perform static code analysis to detect mistakes
        run:
            - jshint
            - jscs

    test:
        desc: Run unit tests
        run:
            - karma:test                # Run Karma using "config/karma.conf.js" configuration

    assemble:
        desc: Assemble application from "src" to "build/public"
        run:
            - wiredep                   # Add Bower dependencies to "index.html" in "src"
            - injector                  # Add all source files to "index.html" in "src"
            - processhtml               # Parse "<!-- process -->" directives in "index.html"
            - useminPrepare             # Make list of source files for ":generated" tasks
            - copy:assemble             # Copy source files to "build/preview"
            - less:generated            # Compile Less to CSS
            - ngAnnotate:generated      # Replace "/* ngInject */" annotations in JavaScript with Angular dependency injection
            - autoprefixer:generated    # Add vendor prefixes to CSS
            - concat:generated          # Combine processed files into bundles
            - ngtemplates               # Add Angular templates to bundle
            - usemin:assembleHtml       # Replace file paths in HTML with paths to bundles
            - usemin:assembleCss        # Replace file paths in CSS  with paths to bundles

    optimize:
        desc: Compress files from "build" to "build/optimized"
        run:
            - clean:optimize            # Delete previously optimized files
            - copy:optimize             # Copy "build" files to "optimized" folder
            - filerev                   # Add cache-busting hash to files
            - concurrent:minify         # Minify JavaScript and CSS
            - usemin:optimizeHtml       # Replace file paths in HTML with paths to cache-busted files
            - usemin:optimizeCss        # Replace file paths in CSS  with paths to cache-busted files

    serve:
        desc: Start server to host site locally
        run:
            - connect:serve             # Start local server to host "build/public"
            - watch                     # Run Grunt tasks when source files change

    # TODO: Prepare files and save to "dist" folder
    package:
        desc: Prepare files and save to "dist" folder
        run: false

    # TODO: Update package versions and create GitHub tags
    release:
        desc: Update package versions and create GitHub tags
        run: false

    angular:
        desc: Angular-specific build options
        run: false

    less:
        desc: Less-specific build options
        run: false

    default:
        run:
            - build
